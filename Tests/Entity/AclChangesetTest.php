<?php

namespace Kunstmaan\AdminNodeBundle\Tests\Entity;

use Kunstmaan\AdminNodeBundle\Entity\AclChangeset;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-08-29 at 14:40:17.
 */
class AclChangesetTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var AclChangeset
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new AclChangeset;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::setChangeset
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::getChangeset
     */
    public function testSetAndGetChangeset()
    {
        $changeset = array('ROLE_ADMIN' => array('ADD' => array('VIEW', 'EDIT'), 'DEL' => 'PUBLISH'));
        $this->object->setChangeset($changeset);

        $this->assertEquals($changeset, $this->object->getChangeset());
    }

    /**
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::setCreated
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::getCreated
     */
    public function testSetAndGetCreated()
    {
        $currentDate = new \DateTime('now');
        $this->object->setCreated($currentDate);

        $this->assertEquals($currentDate, $this->object->getCreated());
    }

    /**
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::setLastModified
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::getLastModified
     */
    public function testSetAndGetLastModified()
    {
        $currentDate = new \DateTime('now');
        $this->object->setLastModified($currentDate);

        $this->assertEquals($currentDate, $this->object->getLastModified());
    }

    /**
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::setNode
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::getNode
     */
    public function testSetAndGetNode()
    {
        $node = new \Kunstmaan\AdminNodeBundle\Entity\Node();
        $this->object->setNode($node);

        $this->assertEquals($node, $this->object->getNode());
    }

    /**
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::setStatus
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::getStatus
     */
    public function testSetAndGetStatus()
    {
        $yesterday = new \DateTime('yesterday');
        $this->object->setLastModified($yesterday);

        $this->assertEquals(AclChangeset::STATUS_NEW, $this->object->getStatus());

        $this->object->setStatus(AclChangeset::STATUS_RUNNING);
        $this->assertNotEquals(AclChangeset::STATUS_NEW, $this->object->getStatus());
        $this->assertEquals(AclChangeset::STATUS_RUNNING, $this->object->getStatus());
        $this->assertNotEquals($yesterday, $this->object->getLastModified());
    }

    /**
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::setPid
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::getPid
     */
    public function testSetAndGetPid()
    {
        $this->object->setPid(10);
        $this->assertEquals(10, $this->object->getPid());
    }

    /**
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::setUser
     * @covers Kunstmaan\AdminNodeBundle\Entity\AclChangeset::getUser
     */
    public function testSetAndGetUser()
    {
        $user = new \Kunstmaan\AdminBundle\Entity\User();
        $this->object->setUser($user);

        $this->assertEquals($user, $this->object->getUser());
    }

}
